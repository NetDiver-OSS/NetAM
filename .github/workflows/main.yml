name: Ruby On Rails

on:
  push:
    branches:
      - dev
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.2-alpine
        env:
          POSTGRES_DB: netam_test
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
      typesense:
        image: typesense/typesense:0.19.0
        env:
          TYPESENSE_DATA_DIR: /data
          TYPESENSE_API_KEY: managementkey
        volumes:
          - /data
        ports:
          - 8108:8108
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@master
      - name: Set up Ruby 2.7
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
      - name: Cache gems
        uses: actions/cache@v2.1.4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-test-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-test-
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Run tests
        run: |
          bundle exec rails db:migrate
          bundle exec rails db:seed
          bundle exec rake gettext:po_to_json
          bundle exec rails assets:precompile
          bundle exec rake
        env:
          RAILS_ENV: test
      - name: Archive code coverage results
        uses: actions/upload-artifact@master
        with:
          name: code-coverage-report
          path: coverage

  haml-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 2.7
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
      - name: Cache gems
        uses: actions/cache@v2.1.4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-haml-lint-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-haml-lint-
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle config set without 'default'
          bundle install --jobs 4 --retry 3
      - name: Run haml-lint
        run: bundle exec haml-lint --parallel

  sonarCloudTrigger:
    needs:
      - test
    name: SonarCloud Trigger
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@master
        with:
          fetch-depth: 0
      - name: Download code coverage results
        uses: actions/download-artifact@master
        with:
          name: code-coverage-report
          path: coverage
      - name: Clean coverage file
        run: |
          ruby -rjson -e 'sqube = JSON.load(File.read("coverage/.resultset.json"))["RSpec"]["coverage"].transform_values {|lines| lines["lines"]}; total = { "RSpec" => { "coverage" => sqube, "timestamp" => Time.now.to_i }}; puts JSON.dump(total)' > coverage/.resultset.solarqube.json
          sed -i 's,/home/runner/work/NetAM/NetAM/,/github/workspace/,g' coverage/.resultset.solarqube.json
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
