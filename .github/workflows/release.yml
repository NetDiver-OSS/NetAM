name: Docker

on:
  push:
    tags:
      - '*'

env:
  IMAGE_NAME: netam/netam

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    services:
      postgres:
        image: postgres:12.2-alpine
        env:
          POSTGRES_DB: netam_test
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@master
      - name: Set up Ruby
        uses: ruby/setup-ruby@master
        with:
          ruby-version: '2.7.2'
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: bundle-use-ruby-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: bundle-use-ruby-
      - name: Install dependencies
        run: |
          bundle config deployment true
          bundle config path vendor/bundle
          bundle install --jobs 4
      - name: Run tests
        run: |
          bundle exec rails db:migrate
          bundle exec rails db:seed
          bundle exec rails assets:precompile
          bundle exec rake
        env:
          RAILS_ENV: test
      - name: Archive code coverage results
        uses: actions/upload-artifact@master
        with:
          name: code-coverage-report
          path: coverage

  push:
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push image to GitHub Container Registry
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker tag $IMAGE_NAME $IMAGE_NAME:latest

          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest
