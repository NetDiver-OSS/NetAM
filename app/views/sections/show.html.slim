div.ui.segment
  div.ui.two.column.very.relaxed.grid
    div.column
      div.ui.cards
        div.ui.card
          div.content
            div.header
              = @section.name
            div.meta
              = @section.network
            div.description
              = @section.description
    div.column
      = raw @ip_usage_graph.div if display_network?(@section.network)

div.ui.clearing.basic.segment
  h3.ui.right.floated.header
    dev.ui.three.buttons
      = link_to '<i class="fas fa-edit"></i>'.html_safe, edit_section_path(@section), class: 'ui blue button popupdisplay', data: {:content => "Edit section" }
      = link_to '<i class="fas fa-download"></i>'.html_safe, export_section_path(@section.id), method: :post, class: 'ui blue button popupdisplay', data: {:content => 'Export to CSV'}
      = link_to '<i class="fas fa-plus-square"></i>'.html_safe, new_usage_path, class: 'ui secondary button popupdisplay', data: {:content => 'Add new usage'}

div.ui
  table.ui.celled.table
    thead
      tr
        th
          h3.center.aligned.header FQDN
        th
          h3.center.aligned IP Address
        th
          h3.center.aligned Description
        th
          h3.center.aligned State
        th
    tbody
      - @section.usages.order("inet(ip_used) ASC").each do |usage|
        tr
          td = usage.fqdn
          td.center.aligned = usage.ip_used
          td = usage.description
          // Display query if state not defined
          - if usage.state.nil?
            td.center.aligned
              i.fas.fa-question-circle
          // Display lock icon if host is locked
          - if usage.state == 0
            td.center.aligned
              i.fas.fa-lock
          // Display check icon if host is up
          - if usage.state == 1
            td.center.aligned
              i.fas.fa-check-circle
          // Display cross icon if host is down
          - if usage.state == 2
            td.center.aligned
              i.fas.fa-times-circle
          // Display random icon if host in in DHCP
          - if usage.state == 3
            td.center.aligned
              i.fas.fa-random
          td.center.aligned.ui.two.buttons
            = link_to '<i class="fas fa-edit"></i>'.html_safe, edit_usage_path(usage), class: 'ui grey button popupdisplay', data: {:content => 'Edit'}
            = link_to '<i class="fas fa-trash-alt"></i>'.html_safe, usage, method: :delete, data: { confirm: 'Are you sure?' }, class: 'ui red button popupdisplay', data: {:content => 'Delete'}

- if display_network?(@section.network)
  div.ui.basic.segment
    div.ui.grid
      - IPAddr.new(@section.network).to_range.each_slice(16) do |addresses|
        div.sixteen.column.row
          - addresses.each do |address|
            - ip_usage = @section.usages.where(ip_used: address.to_s).first
            div.column style="padding-left: 0; padding-right: 0;"
              - if ip_usage.nil?
                a class="ui label #{ip_usage.nil? ? 'grey' : ip_usage.state == 2 ? 'red' : ip_usage.state == 3 ? 'purple' : 'green' }" href="#{ip_usage.nil? ? new_usage_path : new_usage_path }"
                  = address.to_s.split('.')[3]
                  div.detail
                    - if ip_usage.nil?
                      i.fas.fa-question-circle
                    - else
                      - if ip_usage.state == 0
                        i.fas.fa-lock
                      - if ip_usage.state == 1
                        i.fas.fa-check-circle
                      - if ip_usage.state == 2
                        i.fas.fa-times-circle
                      - if ip_usage.state == 3
                        i.fas.fa-random
              - else
                a class="ui label #{ip_usage.nil? ? 'grey' : ip_usage.state == 2 ? 'red' : ip_usage.state == 3 ? 'purple' : 'green' }" href="#{ip_usage.nil? ? new_usage_path : edit_usage_path(ip_usage) }"
                  = address.to_s.split('.')[3]
                  div.detail
                    - if ip_usage.nil?
                      i.fas.fa-question-circle
                    - else
                      - if ip_usage.state == 0
                        i.fas.fa-lock
                      - if ip_usage.state == 1
                        i.fas.fa-check-circle
                      - if ip_usage.state == 2
                        i.fas.fa-times-circle
                      - if ip_usage.state == 3
                        i.fas.fa-random
