:ruby
  page_title "#{@section.name.upcase} - #{@section.network}"

  page_action({ icon: fa_icon_with_text('fas fa-edit', _('Edit')), path: edit_section_path(@section) }) if can? :edit, @section
  page_action({ icon: fa_icon_with_text('fas fa-search', _('Scan')), path: section_scan_path(@section), method: 'post' }) if can? :scan, @section
  page_action({ icon: fa_icon_with_text('fas fa-download', _('Export')), path: section_export_path(@section.id), method: 'post' }) if can? :export, @section
  page_action({ icon: '<i class="fas fa-plus-square"></i>', path: new_section_usage_path(@section.id) }) if can? :edit, @section


%section-scan{ jid: params[:scan_id] || NetAM::Section.get_last_jid(@section.id) }

%div{ class: 'grid grid-cols-6 gap-3' }
  - last_scan = NetAM::Section.get_last_scan(@section.id).to_i

  %div{ class: "col-span-6 sm:col-span-#{last_scan.zero? ? '3' : '2'}" }
    %div{ class: 'bg-white dark:bg-gray-600 text-center p-3 rounded shadow' }
      %h3.font-bold= _('Section VLAN')
      %p.pt-2= format('%{name} (VID %{vid})', { name: @section.vlan_name, vid: @section.vlan_vid })

  %div{ class: "col-span-6 sm:col-span-#{last_scan.zero? ? '3' : '2'}" }
    %div{ class: 'bg-white dark:bg-gray-600 text-center p-3 rounded shadow' }
      %h3.font-bold= _('Affected worker')
      %p.pt-2
        - if @section.worker.nil?
          = _('No worker assigned')
        - else
          = @section.worker_name

  - unless last_scan.zero?
    %div{ class: 'col-span-6 sm:col-span-2' }
      %div{ class: 'bg-white dark:bg-gray-600 text-center p-3 rounded shadow' }
        %h3.font-bold= _('Last scan time')
        %p.pt-2= Time.zone.at(last_scan)

%div{ class: 'grid grid-cols-1 sm:grid-cols-2 gap-3' }
  %div.grid.grid-cols-2.gap-3.py-3
    %div{ class: 'flex items-center bg-white dark:bg-gray-600 p-2 rounded shadow' }
      %div{ class: 'flex items-center justify-center text-2xl h-16 w-16 bg-blue-500 text-white rounded shadow-md' }
        %i.fas.fa-lock
      %div{ class: 'flex flex-col flex-grow justify-center px-3' }
        %p{ class: 'font-light text-sm' }= _('Locked')
        %p.font-bold= number_with_delimiter @ip_locked

    %div{ class: 'flex items-center bg-white dark:bg-gray-600 p-2 rounded shadow' }
      %div{ class: 'flex items-center justify-center text-2xl h-16 w-16 bg-green-500 text-white rounded shadow-md' }
        %i.fas.fa-check-circle
      %div{ class: 'flex flex-col flex-grow justify-center px-3' }
        %p{ class: 'font-light text-sm' }= _('Activated')
        %p.font-bold= number_with_delimiter @ip_activated

    %div{ class: 'flex items-center bg-white dark:bg-gray-600 p-2 rounded shadow' }
      %div{ class: 'flex items-center justify-center text-2xl h-16 w-16 bg-red-500 text-white rounded shadow-md' }
        %i.fas.fa-times-circle
      %div{ class: 'flex flex-col flex-grow justify-center px-3' }
        %p{ class: 'font-light text-sm' }= _('Down')
        %p.font-bold= number_with_delimiter @ip_down

    %div{ class: 'flex items-center bg-white dark:bg-gray-600 p-2 rounded shadow' }
      %div{ class: 'flex items-center justify-center text-2xl h-16 w-16 bg-purple-500 text-white rounded shadow-md' }
        %i.fas.fa-random
      %div{ class: 'flex flex-col flex-grow justify-center px-3' }
        %p{ class: 'font-light text-sm' }= _('DHCP')
        %p.font-bold= number_with_delimiter @ip_dhcp

    %div{ class: 'col-span-2 flex items-center bg-white dark:bg-gray-600 p-2 rounded shadow' }
      %div{ class: 'flex items-center justify-center text-2xl h-16 w-16 bg-gray-500 text-white rounded shadow-md' }
        %i.fas.fa-check
      %div{ class: 'flex flex-col flex-grow justify-center px-3' }
        %p{ class: 'font-light text-sm' }= _('Free IP')
        %p.font-bold= number_with_delimiter @ip_free
        %div{ class: 'relative pt-1' }
          %div{ class: 'overflow-hidden h-2 text-xs flex rounded bg-gray-200' }
            %div{ style: "width: #{@ip_free * 100 / IPAddress(@section.network).size}%", class: 'shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-gray-400' }

  %div.col-6.py-3
    %div{ class: 'flex justify-center items-center bg-white dark:bg-gray-600 p-2 rounded shadow' }
      %section-usage{ id: @section.id }

%div{ class: 'flex flex-wrap' }
  %div{ class: 'w-full my-5' }
    %div{ class: 'relative flex flex-col min-w-0 break-words bg-white dark:bg-gray-600 w-full shadow-lg rounded' }
      %div{ class: 'rounded-t mb-0 px-4 py-3 border-0' }
        %div{ class: 'flex flex-wrap items-center' }
          %div{ class: 'relative w-full max-w-full flex-grow flex-1' }
            %h3{ class: 'font-semibold text-base text-gray-800 dark:text-gray-100' }= _('Address Table')
      %div{ class: 'block w-full overflow-x-auto' }
        %table{ class: 'items-center w-full bg-transparent border-collapse' }
          %thead
            %tr
              %th{ class: 'px-6 bg-gray-100 dark:bg-gray-500 text-gray-600 dark:text-gray-200 align-middle border border-solid border-gray-200 dark:border-gray-600 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold' }= _('FQDN')
              %th{ class: 'px-6 bg-gray-100 dark:bg-gray-500 text-gray-600 dark:text-gray-200 align-middle border border-solid border-gray-200 dark:border-gray-600 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold' }= _('IP Address')
              %th{ class: 'px-6 bg-gray-100 dark:bg-gray-500 text-gray-600 dark:text-gray-200 align-middle border border-solid border-gray-200 dark:border-gray-600 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold' }= _('Description')
              %th{ class: 'px-6 bg-gray-100 dark:bg-gray-500 text-gray-600 dark:text-gray-200 align-middle border border-solid border-gray-200 dark:border-gray-600 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold' }= _('State')
              %th{ class: 'px-6 bg-gray-100 dark:bg-gray-500 text-gray-600 dark:text-gray-200 align-middle border border-solid border-gray-200 dark:border-gray-600 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold w-2/6' }
          %tbody
            - @section.usages.order('inet(ip_used) ASC').each do |usage|
              %tr
                %td{ class: 'border-t-0 px-6 border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 font-bold text-center' }= usage.fqdn
                %td{ class: 'border-t-0 px-6 border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-center' }= usage.ip_used
                %td{ class: 'border-t-0 px-6 border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-center' }= usage.description
                %td{ class: 'border-t-0 px-6 border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-center' } #{usage&.state&.capitalize} #{usage_icon(usage&.state)}

                %td{ class: 'border-t-0 px-6 border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-center' }
                  = link_to fa_icon_with_text('fas fa-search', _('Scan')), section_usage_scan_path(@section, usage), method: :post, class: 'w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm' if can? :scan, @section
                  = link_to fa_icon_with_text('fas fa-pencil-alt', _('Edit')), edit_section_usage_path(@section, usage), class: 'w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-yellow-600 text-base font-medium text-white hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500 sm:ml-3 sm:w-auto sm:text-sm' if can? :edit, @section
                  = link_to fa_icon_with_text('fas fa-trash', _('Release')), section_usage_path(@section, usage), method: :delete, data: { confirm: _('Are you sure?') }, class: 'w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm' if can? :destroy, @section

- if IPAddress(@section.network).ipv4? && IPAddress(@section.network).prefix >= 24
  %div{ class: 'bg-white dark:bg-gray-600 p-3 rounded shadow' }
    %h3{ class: 'font-semibold text-base text-gray-800 dark:text-gray-100' }= _('Address Matrix')

    %div{ class: 'flex flex-wrap py-2' }
      - NetAM::Network::Range.new(@section.network).all_ips.each do |address|
        - ip_usage = @all_ip_used.filter_map { |entry| entry if entry[1].to_s == address.to_s }.first
        %a.text-center.w-8{ href: ip_usage.nil? ? new_section_usage_path(@section.id, { ip: address }) : edit_section_usage_path(@section, ip_usage[0]) }
          %small= NetAM::Network::Range.clean_display(address)
          %br
          - if ip_usage.nil?
            %i{ class: 'fas fa-question-circle text-gray-400' }
          - elsif ip_usage[2] == 'locked'
            %i{ class: 'fas fa-lock text-blue-400' }
          - elsif ip_usage[2] == 'actived'
            %i{ class: 'fas fa-check-circle text-green-400' }
          - elsif ip_usage[2] == 'down'
            %i{ class: 'fas fa-times-circle text-red-400' }
          - elsif ip_usage[2] == 'dhcp'
            %i{ class: 'fas fa-random text-purple-400' }
